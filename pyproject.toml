[tool.poetry]
name = "ceda-elasticsearch-tools"
version = "2.4.0"
description = "Extension of the basic elasticsearch python wrapper to perform operations with a given ES index."
authors = ["Rhys Evans <rhys.evans@stfc.ac.uk>, Daniel Westwood <daniel.westwood@stfc.ac.uk>, Neil Massey <neil.massey@stfc.ac.uk>"]
license = "{file='LICENSE'}"
readme = "README.md"

[project.urls]
Repository = "https://github.com/cedadev/ceda-elasticsearch-tools.git"

classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    'Development Status :: 5 - Production',

    # Indicate who your project is intended for
    'Intended Audience :: Developers',
    'Topic :: Software Development :: Build Tools',

    # Pick your license as you wish (should match "license" above)
    'License :: OSI Approved :: MIT License',

    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.

    'Programming Language :: Python :: 3.8',
]

include = [
    { path = 'root_certificate/root-ca.pem' }
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
requests = "^2.32.3"
elasticsearch = "^7"
docopt = "^0.6.2"
tqdm = "^4.66.5"
certifi = "^2024.8.30"
chardet = "^5.2.0"
idna = "^3.10"
urllib3 = "^2.2.3"
simplejson = "^3.19.3"
tabulate = "^0.9.0"
setuptools = "^75.2.0"

[tool.poetry.scripts]
nla_sync_es = "ceda_elasticsearch_tools.cmdline.nla_sync_es:main"

nla_sync_lotus_task = "ceda_elasticsearch_tools.cmdline.secondary_scripts.nla_sync_lotus_task:main"

update_md5 = "ceda_elasticsearch_tools.cmdline.update_md5:main"

md5 = "ceda_elasticsearch_tools.cmdline.secondary_scripts.md5:main"

fbs_missing_files = "ceda_elasticsearch_tools.cmdline.fbs_missing_files:main"

spot_checker = "ceda_elasticsearch_tools.cmdline.secondary_scripts.spot_checker:main"

fbs_live_index = "ceda_elasticsearch_tools.cmdline.fbs_live_index:main"

coverage_test = "ceda_elasticsearch_tools.cmdline.ceda_eo.coverage_test:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
